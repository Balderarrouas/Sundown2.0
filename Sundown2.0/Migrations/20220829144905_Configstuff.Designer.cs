// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sundown2._0.Data;

namespace Sundown2._0.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220829144905_Configstuff")]
    partial class Configstuff
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Sundown2._0.Models.Astronaut", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Astronauts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Avatar = "",
                            CodeName = "First Man",
                            Email = "yuga@mtr.moon",
                            FirstName = "Yuri",
                            LastName = "Gagarin",
                            Password = "poleposition1",
                            Username = "yuga"
                        },
                        new
                        {
                            Id = 2,
                            Avatar = "",
                            CodeName = "Shepard",
                            Email = "alsh@mtr.moon",
                            FirstName = "Alan",
                            LastName = "Shepard",
                            Password = "secret",
                            Username = "alsh"
                        },
                        new
                        {
                            Id = 3,
                            Avatar = "",
                            CodeName = "Valentine",
                            Email = "vate@mtr.moon",
                            FirstName = "Valentina",
                            LastName = "Tereshkova",
                            Password = "DQ!cnRVYzQ64@Fwha!XB_kYn",
                            Username = "vate"
                        },
                        new
                        {
                            Id = 4,
                            Avatar = "",
                            CodeName = "bluey",
                            Email = "gubi@mtr.moon",
                            FirstName = "Guion",
                            LastName = "Bluford",
                            Password = "STS-8!Challenger1983",
                            Username = "gubi"
                        },
                        new
                        {
                            Id = 5,
                            Avatar = "",
                            CodeName = "Great Dane",
                            Email = "anmo@mtr.moon",
                            FirstName = "Andreas",
                            LastName = "Mogensen",
                            Password = "rødgrødmedfløde",
                            Username = "anmo"
                        },
                        new
                        {
                            Id = 6,
                            Avatar = "",
                            CodeName = "Neon",
                            Email = "yiso@mtr.moon",
                            FirstName = "Yi",
                            LastName = "So-Yeon",
                            Password = "K2t@dACRkGCd3-UQQmCZJbTj",
                            Username = "yiso"
                        });
                });

            modelBuilder.Entity("Sundown2._0.Models.LandingFacility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Altitude")
                        .HasColumnType("float");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LandingFacilities");
                });

            modelBuilder.Entity("Sundown2._0.Models.SpaceStation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Altitude")
                        .HasColumnType("float");

                    b.Property<double>("Daynum")
                        .HasColumnType("float");

                    b.Property<double>("Footprint")
                        .HasColumnType("float");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("SolarLat")
                        .HasColumnType("float");

                    b.Property<double>("SolarLon")
                        .HasColumnType("float");

                    b.Property<int>("Timestamp")
                        .HasColumnType("int");

                    b.Property<string>("Units")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Velocity")
                        .HasColumnType("float");

                    b.Property<string>("Visibility")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SpaceStations");
                });
#pragma warning restore 612, 618
        }
    }
}
